# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - wapp-linkgeek-westeurope

env:
  AZURE_WEBAPP_PACKAGE_PATH: './src/LinkGeek'
  DOTNET_VERSION: '6.0.x'

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true

      - name: Build with dotnet
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet build --configuration Release

      - name: Dotnet test
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet test

      - name: dotnet publish
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
          
  tests_e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true
      - uses: actions/setup-node@v3

      - name: Start sqlServer
        run: docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=YourSTRONG!Passw0rd' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2022-latest

      - name: Run tests
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/LinkGeek
          dotnet run --launch-profile IntegrationTests &

      - name: Install dependencies
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/LinkGeekIntegrationTests
          npm ci

      - name: Install playwright browsers
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/LinkGeekIntegrationTests
          npx playwright install --with-deps

      - name: Run tests
        run: |
          cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/LinkGeekIntegrationTests
          npx playwright test --config=tests/config.ts
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-report
          path: test-results

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build
      - tests_e2e
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'wapp-linkgeek-westeurope'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_839B1E29C1F34913A22998E08BBABB22 }}
          package: .
